{"version":3,"sources":["default.js","App.js","reportWebVitals.js","index.js"],"names":["data","login","eid","psw","App","props","onInputChange","event","setState","target","id","value","onLogin","state","length","alert","isLoggedIn","loginBox","Form","className","Group","controlId","Label","Control","type","onChange","placeholder","Button","variant","onClick","getDistance","lat1","lon1","lat2","lon2","PI","Math","dLat","dLon","a","pow","sin","cos","asin","sqrt","onMark","navigator","geolocation","getCurrentPosition","onMarkContinued","position","coords","latitude","longitude","defLat","defLon","console","log","result","setTimeout","mainBox","Fragment","src","alt","Container","fluid","Row","Col","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfdc992b.chunk.js","sourcesContent":["const data = {\r\n    login: { eid:'123456', psw:'123456' }\r\n}\r\n\r\nexport default data;","import React, { Component } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport data from './default';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn : false,\n      eid: '',\n      psw: '',\n      defLat: 28.4752093, \n      defLon: 77.5094986,\n      result: '',\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({ [event.target.id]: event.target.value });\n  }\n\n  onLogin = () => {\n    const { eid, psw } = this.state;\n    if(eid.length > 6) {\n      alert('The employee id should be of length 6.')\n    }\n    else if(psw.length > 10 || psw.length < 5) {\n      alert('The password should be of length between 5 and 10.')\n    }\n    else {\n      if(data.login.eid === eid && data.login.psw === psw) {\n        this.setState({ isLoggedIn: !this.state.isLoggedIn })\n      }\n      else {\n        alert('The entered credentials are wrong! Try again.')\n      }\n    }\n  }\n\n  loginBox = () => {\n    return(\n      <Form className=\"w-50\">\n        <Form.Group controlId=\"eid\">\n          <Form.Label>Employee ID</Form.Label>\n          <Form.Control type=\"text\" \n            onChange={this.onInputChange} \n            placeholder=\"Enter Employee ID\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"psw\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control \n            type=\"password\"\n            onChange={this.onInputChange}\n            placeholder=\"Enter Password\"\n          />\n        </Form.Group>\n        <Button variant=\"success\" onClick={this.onLogin}>Login</Button>\n      </Form>\n    );\n  }\n\n  getDistance = (lat1, lon1, lat2, lon2) => {\n    const { PI } = Math;\n    let dLat = (lat2 - lat1) * \n\t\t\t\t\tPI / 180.0; \n\t\tlet dLon = (lon2 - lon1) * \n\t\t\t\t\tPI / 180.0; \n\n\t\tlat1 = (lat1) * PI / 180.0; \n\t\tlat2 = (lat2) * PI / 180.0; \n\n\t\tlet a = Math.pow(Math.sin(dLat / 2), 2) + \n\t\t\t\tMath.pow(Math.sin(dLon / 2), 2) * \n\t\t\t\tMath.cos(lat1) * Math.cos(lat2); \n\t\tlet rad = 6371; \n\t\tlet c = 2 * Math.asin(Math.sqrt(a)); \n\t\treturn rad * c; \n  }\n\n  onMark = () => {\n    if(navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.onMarkContinued);\n    } else {\n      alert(\"Geolocation is not supported by this browser.\")\n    }\n  }\n\n  onMarkContinued = (position) => {\n    const { latitude, longitude } = position.coords;\n    const { defLat, defLon } = this.state;\n    console.log(latitude);\n    console.log(longitude);\n    let dis = this.getDistance(latitude, longitude, defLat, defLon);\n    if(dis <= 0.10) {\n      this.setState({ result: 'Attendance Marked!'});\n    }\n    else {\n      this.setState({ result: 'You are not inside the campus!'});\n    }\n    setTimeout(() => { \n      this.setState({ result: '' }); \n    }, 3000);\n  }\n\n  mainBox = () => {\n    return (\n      <React.Fragment>\n        <img id=\"i1\" className=\"mb-5\" src=\"assets/art.png\" alt=\"Attendance\"/>\n        <Button variant=\"success\" className=\"mb-3\" onClick={this.onMark} >Mark Attendance</Button>\n        <div id=\"t1\" >{this.state.result}</div>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Container fluid=\"md\" className=\"p-0 h-100\">\n        <Row id=\"s1\">\n          <Col className=\"bg-primary d-flex justify-content-center align-items-center\">\n            <div className=\"text-center h3 text-white mb-0 align-middle\">\n              Attendance Management System\n            </div>\n          </Col>\n        </Row>\n        <Row id=\"s2\">\n          <Col className=\"bg-light d-flex justify-content-center flex-column align-items-center\">\n            {this.state.isLoggedIn ? this.mainBox() : this.loginBox()}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}